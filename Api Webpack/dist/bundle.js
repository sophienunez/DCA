(()=>{"use strict";class n extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}connectedCallback(){return n=this,e=void 0,s=function*(){const n=yield(e=void 0,t=void 0,s=void 0,c=function*(){const n=yield fetch("https://rickandmortyapi.com/api/character"),e=yield n.json();return console.log(e.results),e.results},new(s||(s=Promise))((function(n,o){function a(n){try{i(c.next(n))}catch(n){o(n)}}function r(n){try{i(c.throw(n))}catch(n){o(n)}}function i(e){var t;e.done?n(e.value):(t=e.value,t instanceof s?t:new s((function(n){n(t)}))).then(a,r)}i((c=c.apply(e,t||[])).next())})));var e,t,s,c;this.render(n)},new((t=void 0)||(t=Promise))((function(c,o){function a(n){try{i(s.next(n))}catch(n){o(n)}}function r(n){try{i(s.throw(n))}catch(n){o(n)}}function i(n){var e;n.done?c(n.value):(e=n.value,e instanceof t?e:new t((function(n){n(e)}))).then(a,r)}i((s=s.apply(n,e||[])).next())}));var n,e,t,s}render(n){if(this.shadowRoot){const e=n.map((({name:n,image:e,gender:t,species:s,status:c})=>`\n            <link rel="stylesheet" href="../src/styles.css">\n            <div class="card">\n             <img src="${e}" alt="character image">\n             <div class="card-content">\n               <p class="name">${n}</p>\n               <p class="gender">${t}</p>\n               <p class="species">${s}</p>\n               <p class="status">${c}</p>\n             </div>\n            </div>\n            `));this.shadowRoot.innerHTML=`\n            ${e.join("")}\n            `}}}customElements.define("my-card",n);class e extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}connectedCallback(){this.render()}render(){this.shadowRoot&&(this.shadowRoot.innerHTML='\n                <link rel="stylesheet" href="../src/styles.css">\n                <my-card></my-card>\n                ')}}customElements.define("app-container",e)})();